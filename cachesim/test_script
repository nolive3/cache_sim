if [ $# -ne 4 ]
then
	echo; echo
	echo "Usage:"
	echo "	$0 <log_cache_size> <is_blocking> <is_lru> <trace_file>"
	echo; echo
	exit
fi

let "C=$1"
F=$2 #is blocking?
R=$3 #is lru?
I=$4

let "max_size=$((8*48*2**10))"   # 48kB in bits



size () {
	local c=$1
	local b=$2
	local s=$3
	local f=$4
	local r=$5
	local p=1

	if [ $f='B' ] 
	then 
		p=$(($p+$((2**$b))))
	else 
		p=$(($p+1))
	fi
	if [ $r='L' ]
	then
		p=$(($p+4))
	else
		p=$(($p+8))
	fi
	t=$(($p*$((2**$(($c-$b))))))
	m=$(($t+8*$((2**$c))))
	echo $m
}
B=0
while [ $B -le $C ]
do
	S=0
	while [ $(($B+$S)) -le $C ]
	do
		echo -n "$B $S "
		if [ $(size $C $B $S $F $R) -ge $((max_size)) ]
		then
			echo 10000 # invalid = 10000 quality
		else
			echo $( (./cachesim -c $C -b $B -s $S -f $F -r $R < $I) | grep -e "AAT" | awk '{ print($5) }')
		fi
		S=$(($S+1))
	done
	B=$(($B+1))
done

